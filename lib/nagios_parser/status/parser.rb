#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module NagiosParser
  module Status
    class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 42)

def create_token(string)
  result = []
  inside = false
  scanner = StringScanner.new(string)

  until scanner.empty?
    case
    when scanner.scan(/\s+/)
      # ignore whitespace
    when scanner.scan(/#[^\n]*/)
      # ignore comments
    when (!inside and match = scanner.scan(/\w+/))
      result << [match, match]
    when match = scanner.scan(/\{/)
      inside = true
      result << [:OPEN, nil]
    when match = scanner.scan(/\}/)
      inside = false
      result << [:CLOSE, nil]
    when match = scanner.scan(/\w+\s*\=/)
      result << [:KEY, match.chop.gsub(/\s+$/, '')]
    when (inside and match = scanner.scan(/\d+$/))
      result << [:VALUE, match.to_i]
    when (inside and match = scanner.scan(/[^\n\}]+/))
      result << [:VALUE, match.gsub(/\s+$/, '')]
    else
      raise "Can't tokenize <#{scanner.peek(10)}>"
    end
  end

  result << [false, false]
end

attr_accessor :token

def self.parse(string)
  new.parse(string)
end

def parse(string)
  @result = {}
  @token = create_token(string)
  do_parse
  @result
end

def next_token
  @token.shift
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    16,    23,    22,    19,    22,    18,     4,     5,     6,     7,
     8,     9,    10,    11,    12,    13,    14,    15,     4,     5,
     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
    25 ]

racc_action_check = [
     1,    20,    20,    16,    18,     3,     1,     1,     1,     1,
     1,     1,     1,     1,     1,     1,     1,     1,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    22 ]

racc_action_pointer = [
    12,     0,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     0,   nil,
    -2,   nil,    25,   nil,   nil,   nil ]

racc_action_default = [
   -20,   -20,    -1,   -20,    -4,    -5,    -6,    -7,    -8,    -9,
   -10,   -11,   -12,   -13,   -14,   -15,   -20,    -2,   -20,    26,
   -20,   -16,   -18,    -3,   -17,   -19 ]

racc_goto_table = [
    21,    20,    24,     2,    17,     1 ]

racc_goto_check = [
     5,     4,     5,     2,     2,     1 ]

racc_goto_pointer = [
   nil,     5,     3,   nil,   -17,   -18 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_none,
  2, 19, :_reduce_none,
  4, 20, :_reduce_3,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 22, :_reduce_none,
  2, 22, :_reduce_17,
  1, 23, :_reduce_18,
  2, 23, :_reduce_19 ]

racc_reduce_n = 20

racc_shift_n = 26

racc_token_table = {
  false => 0,
  :error => 1,
  :OPEN => 2,
  :CLOSE => 3,
  :KEY => 4,
  :VALUE => 5,
  "contactstatus" => 6,
  "hostcomment" => 7,
  "hostdowntime" => 8,
  "hoststatus" => 9,
  "info" => 10,
  "servicecomment" => 11,
  "servicedowntime" => 12,
  "servicestatus" => 13,
  "programstatus" => 14,
  "host" => 15,
  "service" => 16,
  "program" => 17 }

racc_nt_base = 18

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "OPEN",
  "CLOSE",
  "KEY",
  "VALUE",
  "\"contactstatus\"",
  "\"hostcomment\"",
  "\"hostdowntime\"",
  "\"hoststatus\"",
  "\"info\"",
  "\"servicecomment\"",
  "\"servicedowntime\"",
  "\"servicestatus\"",
  "\"programstatus\"",
  "\"host\"",
  "\"service\"",
  "\"program\"",
  "$start",
  "types",
  "type",
  "type_names",
  "assignments",
  "assignment" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_3(val, _values, result)
            @result[val[0]] ||= []
	@result[val[0]] << val[2]
      
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_17(val, _values, result)
            val[1].each do |key, value|
          val[0][key] = value
        end
        result = val[0]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_18(val, _values, result)
     result = {val[0] => nil}
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_19(val, _values, result)
     result = {val[0] => val[1]} 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module Status
  end   # module NagiosParser
